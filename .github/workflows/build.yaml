name: Build

on:
  push:
    branches:
      - main
    tags:
      - v0.*
      - v1.*

jobs:
  build-binary:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Install Dependencies
        run: go get .
      - name: Test with Go
        run: go test -json ./... > tests.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: go-test-results
          path: tests.json
      - name: Build the binary
        run: |
          go build -v \
            -o build/liapi \
            -trimpath \
            -ldflags="-s -w -X main.Version=${GITHUB_REF_NAME} -X main.CommitHash=${GITHUB_SHA} -X main.BuildTime=$(date +%s)"
      - name: Publish the binary as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/*
          if-no-files-found: warn
          retention-days: 60
    
  build-and-push-image:
    needs: build-binary
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Grab the latest binary
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        id: meta
        with:
          context: workflow
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.ci
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
